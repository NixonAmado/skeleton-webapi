// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia.Data;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(SkeletonContext))]
    [Migration("20230901192914_InitialCreate01")]
    partial class InitialCreate01
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Entities.ClassRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasMaxLength(3)
                        .HasColumnType("int");

                    b.Property<string>("RoomName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("ClassRoom", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Country", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdCountryFk")
                        .HasColumnType("int");

                    b.Property<int>("IdGenderFk")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonTypeFk")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdCountryFk");

                    b.HasIndex("IdGenderFk");

                    b.HasIndex("IdPersonTypeFk");

                    b.ToTable("Person", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.PersonType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PersonType", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdStateFk")
                        .HasColumnType("int");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("IdStateFk");

                    b.ToTable("Region", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.Registration", b =>
                {
                    b.Property<int>("IdClassRoomFk")
                        .HasColumnType("int");

                    b.Property<int>("IdPersonFk")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("IdClassRoomFk", "IdPersonFk");

                    b.HasIndex("IdPersonFk");

                    b.ToTable("Registration", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdCountryFk")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("IdCountryFk");

                    b.ToTable("State", (string)null);
                });

            modelBuilder.Entity("Dominio.Entities.TrainerClassRoom", b =>
                {
                    b.Property<int>("IdPersonFk")
                        .HasColumnType("int");

                    b.Property<int>("IdClassRoomFk")
                        .HasColumnType("int");

                    b.HasKey("IdPersonFk", "IdClassRoomFk");

                    b.HasIndex("IdClassRoomFk");

                    b.ToTable("TrainerClassRooms");
                });

            modelBuilder.Entity("Dominio.Entities.Person", b =>
                {
                    b.HasOne("Dominio.Entities.Country", "Country")
                        .WithMany("Persons")
                        .HasForeignKey("IdCountryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Gender", "Gender")
                        .WithMany("Persons")
                        .HasForeignKey("IdGenderFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.PersonType", "PersonType")
                        .WithMany("Persons")
                        .HasForeignKey("IdPersonTypeFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Gender");

                    b.Navigation("PersonType");
                });

            modelBuilder.Entity("Dominio.Entities.Region", b =>
                {
                    b.HasOne("Dominio.Entities.State", "State")
                        .WithMany("Regions")
                        .HasForeignKey("IdStateFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("Dominio.Entities.Registration", b =>
                {
                    b.HasOne("Dominio.Entities.ClassRoom", "ClassRoom")
                        .WithMany("Registrations")
                        .HasForeignKey("IdClassRoomFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Person", "Person")
                        .WithMany("Registrations")
                        .HasForeignKey("IdPersonFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Dominio.Entities.State", b =>
                {
                    b.HasOne("Dominio.Entities.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("IdCountryFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Dominio.Entities.TrainerClassRoom", b =>
                {
                    b.HasOne("Dominio.Entities.ClassRoom", "ClassRoom")
                        .WithMany("TrainerClassRooms")
                        .HasForeignKey("IdClassRoomFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dominio.Entities.Person", "Person")
                        .WithMany("TrainerClassRooms")
                        .HasForeignKey("IdPersonFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassRoom");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Dominio.Entities.ClassRoom", b =>
                {
                    b.Navigation("Registrations");

                    b.Navigation("TrainerClassRooms");
                });

            modelBuilder.Entity("Dominio.Entities.Country", b =>
                {
                    b.Navigation("Persons");

                    b.Navigation("States");
                });

            modelBuilder.Entity("Dominio.Entities.Gender", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Dominio.Entities.Person", b =>
                {
                    b.Navigation("Registrations");

                    b.Navigation("TrainerClassRooms");
                });

            modelBuilder.Entity("Dominio.Entities.PersonType", b =>
                {
                    b.Navigation("Persons");
                });

            modelBuilder.Entity("Dominio.Entities.State", b =>
                {
                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
